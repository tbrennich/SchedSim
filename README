I have add to the existing makefile in order to compile in my new class, so make sure that gets copied as well.

Basically, in order to use the multi-level queue (MLQ), make sure that in the Scheduler constructor Line 40 is not commented. 
This will initialize a MLQ that will be used for the remainder of the program. There only modifications needed are to pass in two parameters to the MLQ constructor. These are described below.
In order to use the traditional ready and wait queues, comment line 40. Once again, there is nothing you need to do extra.


MLQ Constructor parameters:
The first parameter, char* typequeues, is a string that defines the type of each queue in the MLQ.
The possible character values are:
	'R' for round robin scheduling of that queue			(This is not completely implemented. Currently, the time quanta are not enforced.)
	'P' for priority scheduling of that queue			
	'S' for shortest job first scheduling of that queue		
	'T' for shortest time remaining first scheduling		(Currently this will act like shortest job first due to lack of implementation of preemption
	'F' for first come first serve scheduling	
	
NOTE: At the end of the string, the null terminator is REQUIRED.

A sample string could be {'R', 'F', 'S', 'P', 'T', 'R','\0'}

The total number of characters in the string will determine the total number of queues in the MLQ


The second parameter, unsigned long* quantum, is an array that specifies the wanted time quanta for the round robin queues.
Because this parameter is not needed for queues that are not scheduled with round robin scheduling, 
the length of this array must be equal to the number of round robin queues desired.

A sample array to complement the above typeQueues string would be {8, 16}
